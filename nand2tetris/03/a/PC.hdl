// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    
    // Resolve for INC bit
    Add16(a=prevOut, b[0]=inc, b[1..15]=false, out=incOut);

    // Resolve for LOAD bit
    Mux16(a=incOut, b=in, sel=load, out=loadOut);

    // Resolve for RESET bit
    Not(in=reset, out=notReset);
    And16(a[0]=notReset,
          a[1]=notReset,
          a[2]=notReset,
          a[3]=notReset,
          a[4]=notReset,
          a[5]=notReset,
          a[6]=notReset,
          a[7]=notReset,
          a[8]=notReset,
          a[9]=notReset,
          a[10]=notReset,
          a[11]=notReset,
          a[12]=notReset,
          a[13]=notReset,
          a[14]=notReset,
          a[15]=notReset, b=loadOut, out=registerIn);

    // Set the register
    Register(in=registerIn, load=true, out=prevOut, out=out);
}
